---
title: "UCell Signature Scoring"
author: "Matthew Zatzman"
---

```{r setup}
library(tidyverse)
library(here)
library(glue)
library(UCell)
library(BPCells)
library(slurmR)

devtools::load_all()
```


Setup slurmR

```{r}
opts_slurmR <- slurmR::opts_slurmR
opts_slurmR$reset()
opts_slurmR$set_opts(partition = "componc_cpu")
# opts_slurmR$set_preamble("singularity exec -B '/data1:/data1' -B '/run/munge/,/etc/slurm/,/usr/lib64/slurm,/usr/lib64/libmunge.so.2' -B '/home/zatzmanm:/home/zatzmanm' /home/zatzmanm/work/images/rstudio/rstudio-latest.sif \\")
opts_slurmR$set_preamble("singularity exec -B '/data1:/data1' -B '/home/zatzmanm:/home/zatzmanm' /home/zatzmanm/work/images/rstudio/rstudio-latest.sif \\")

out_dir <- here("results")
tmp_dir <- here("logs")
ncores <- 16
```


Setup signatures

Get the pathways provided by Alvaro

```{r}
egfr_pathways <- readxl::read_excel(here::here("metadata", "pathways", "egfr_pathways.xlsx")) %>%
  janitor::clean_names()

histo_pathways <- readxl::read_excel(here::here("metadata", "pathways", "egfr_pathways.xlsx"), sheet = "lung_histo", skip = 1)

custom_paths <- map(list(histo_pathways), \(l) {
  map(l, \(x) list(x[!is.na(x)])) %>%
    list_c() %>%
    setNames(., names(l))
}) %>%
  list_c()

# Remove DST from the LUSC set due to its non-specific expression
custom_paths$LUSC_GIRARD <- custom_paths$LUSC_GIRARD[custom_paths$LUSC_GIRARD != "DST"]
# SCLC CCLE signature
sclc_ccle <- read.table(file = here("ccle_signatures", "sclc_markers.txt"), header = T, sep = "\t")$gene

custom_paths[["SCLC_CCLE"]] <- sclc_ccle

all_gene_sets <- msigdbr::msigdbr(species = "Homo sapiens")

lung_c8_paths <- grep("*lung*", unique(all_gene_sets[all_gene_sets$gs_cat == "C8", ]$gs_name), ignore.case = T, value = T)

hallmark_paths <- all_gene_sets[all_gene_sets$gs_cat == "H", ]$gs_name %>% unique()

path_names <- c(egfr_pathways$pathway, lung_c8_paths, hallmark_paths)

pathways <- map(path_names, \(pathway) {
  all_gene_sets[all_gene_sets$gs_name == pathway, ]$gene_symbol
})

names(pathways) <- path_names

pathways_final <- c(pathways, custom_paths)

# Add egfr pathway minus egfr
pathways_final[["BIOCARTA_EGF_PATHWAY_minusEGFR"]] <- {
  all_gene_sets[all_gene_sets$gs_name == "BIOCARTA_EGF_PATHWAY", ] %>%
    filter(gene_symbol != "EGFR") %>%
    pull(gene_symbol)
}


# Add custom entries to the table
add_paths <- tibble::tribble(
  ~genesets_related_to, ~category, ~pathway, ~description,
  "LUAD differentiation", "LUAD", "LUAD_GIRARD", NA,
  "LUSC differentiation", "LUSC", "LUSC_GIRARD", NA,
  "MAPK signaling", "EGFR", "BIOCARTA_EGF_PATHWAY_minusEGFR", NA,
  "SCLC differentiation", "SCLC", "SCLC_CCLE", NA
)

egfr_pathways <- list_rbind(list(egfr_pathways, add_paths))

pathway_df <- map2(pathways_final, names(pathways_final), .f = function(x, n) {
  df <- data.frame(Gene = x)
  df$pathway <- n
  return(df)
}) %>%
  list_rbind()

write.table(pathway_df, file = here("metadata", "pathways", "egfr_pathways_v2.txt"), col.names = T, row.names = F, quote = F, sep = "\t")
```



```{r}
ranks_f <- here("data", "ucell_cohort_ranks.rds")

job <- Slurm_lapply(
  job_name = "ucell_cohort_scores",
  njobs = 1,
  mc.cores = ncores,
  tmp_path = tmp_dir,
  export = c("ranks_f", "out_dir", "ncores", "pathway_df"),
  plan = "submit",
  sbatch_opt = list(
    partition = "componc_cpu",
    mem = "128G",
    time = "4:00:00"
  ),
  X = list(1),
  FUN = function(x) {
    out <- file.path(out_dir, "ucell_cohort_signatures.txt.gz")


    ranks <- readRDS(ranks_f)

    features <- split(pathway_df$Gene, pathway_df$pathway)

    scores <- UCell::ScoreSignatures_UCell(
      precalc.ranks = ranks,
      features = features,
      chunk.size = 2000,
      name = "",
      BPPARAM = MulticoreParam(workers = ncores, progressbar = T)
    )

    scores <- scores %>%
      as.data.frame() %>%
      rownames_to_column("cell_id")

    write.table(x = scores, file = gzfile(out), quote = F, sep = "\t", row.names = F, col.names = T)
  }
)
```


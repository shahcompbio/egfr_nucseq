---
title: "EGFR Load Impact"
author: "Matthew Zatzman"
date: "`r Sys.Date()`"
execute: 
  warning: false
  error: false
format: 
  html:
    embed-resources: true
    code-tools: true
    toc: true
---

```{r setup}
library(tidyverse)
library(patchwork)
library(glue)
library(ComplexHeatmap)
library(ggh4x)
library(ggthemes)
library(readxl)
library(here)
devtools::load_all()
colors <- load_colors()
```

# Load data

```{r}
onco_dat <- read_excel(here("paper_data", "supplemental_tables.xlsx"), sheet = "Table S2 - IMPACT Mutations")
metadata <- read_excel(here("paper_data", "supplemental_tables.xlsx"), sheet = "Table S1 - Cohort Metadata") %>%
  as.data.frame()
metadata$facets_fga <- as.numeric(metadata$facets_fga)
metadata$facets_ploidy <- as.numeric(metadata$facets_ploidy)
metadata$facets_purity <- as.numeric(metadata$facets_purity)
metadata$facets_frac_loh <- as.numeric(metadata$facets_frac_loh)
metadata$facets_wgd <- as.logical(metadata$facets_wgd)
metadata$time_point <- fct_relevel(metadata$time_point, "TN", "MRD", "PD")

# Missing the linker so load the metadata
meta_tmp <- read.table(file = here("paper_data", "metadata_update_mar_2025.txt"), header = T, sep = "\t", quote = "\"")

impact_data <- readRDS(here("paper_data", "impact_data.rds"))

meta_tmp$tmb <- as.numeric(impact_data$clin_dat_sample$CVR_TMB_SCORE[match(meta_tmp$dmp_sample, impact_data$clin_dat_sample$dmp_sample)])

metadata$tmb <- meta_tmp$tmb[match(metadata$sample_id_orig, meta_tmp$sample_id)]
```


# Oncoprint

Prepare for plotting

```{r, fig.width=11, fig.height=10}
comut_mat <- onco_dat %>%
  # filter(dmp_sample %in% onco_meta$dmp_sample) %>%
  pivot_wider(id_cols = sample_id, names_from = gene, values_from = mutation_type_simple, values_fn = function(x) paste0(x, collapse = ";"), values_fill = "") %>%
  column_to_rownames("sample_id") %>%
  as.matrix() %>%
  t()

comut_mat_final <- comut_mat

# Reorder metadata
rownames(metadata) <- metadata$sample_id
metadata <- metadata[colnames(comut_mat_final), ]

mut_pal <- c(
  "Missense Mutation" = "#1C91D4",
  "Nonsense Mutation" = "#D5C711",
  "Deep Deletion" = "blue",
  "Amplification" = "red",
  "Frameshift Indel" = "#D55E00",
  "Inframe Indel" = "#CC79A7",
  "RNA Fusion" = "#F0E442",
  "Structural Variant" = "#56B4E9",
  "Other" = "#007756"
)
```


```{r, fig.width=11, fig.height=10}
alter_fun <- list(
  background = alter_graphic("rect", fill = "#CCCCCC"),
  "Amplification" = alter_graphic("rect", fill = mut_pal["Amplification"]),
  "Deep Deletion" = alter_graphic("rect", fill = mut_pal["Deep Deletion"]),
  "Missense Mutation" = alter_graphic("rect", height = 0.33, fill = mut_pal["Missense Mutation"]),
  "Nonsense Mutation" = alter_graphic("rect", height = 0.33, fill = mut_pal["Nonsense Mutation"]),
  "Frameshift Indel" = alter_graphic("rect", height = 0.33, fill = mut_pal["Frameshift Indel"]),
  "Inframe Indel" = alter_graphic("rect", height = 0.33, fill = mut_pal["Inframe Indel"]),
  "RNA Fusion" = alter_graphic("rect", height = 1, width = 0.33, fill = mut_pal["RNA Fusion"]),
  "Structural Variant" = alter_graphic("rect", height = 0.33, fill = mut_pal["Structural Variant"]),
  "Other" = alter_graphic("rect", height = 0.33, fill = mut_pal["Other"])
)

anno_cols <- list(
  "timepoint" = colors$time_point,
  "WGD" = colors$tf,
  "FGA" = circlize::colorRamp2(range(metadata$facets_fga, na.rm = T), hcl_palette = "SunsetDark", reverse = TRUE),
  "age" = circlize::colorRamp2(range(metadata$age_at_intial_diagnosis, na.rm = T), hcl_palette = "SunsetDark", reverse = TRUE)
)

tmb_breaks <- c(1, 10, 100)


top_anno <- HeatmapAnnotation(
  na_col = colors$tf[["NA"]],
  annotation_name_side = "left",
  annotation_label = c(
    "TMB",
    "FGA",
    "WGD",
    "Age",
    "Time point"
  ),
  # cbar = anno_oncoprint_barplot(),
  TMB = anno_barplot(
    x = log10(metadata$tmb + 1),
    axis_param = list(
      at = log10(tmb_breaks + 1),
      labels = tmb_breaks,
      side = "left"
    ),
    ylim = c(log10(1), log10(100)),
    border = FALSE,
    baseline = 0
  ),
  FGA = metadata$facets_fga,
  WGD = metadata$facets_wgd,
  age = metadata$age_at_intial_diagnosis,
  timepoint = anno_block(
    gp = gpar(fill = colors$time_point),
    labels = c("Treatment Naive", "MRD", "Progressive Disease"),
    labels_gp = gpar(col = "white", fontsize = 11)
  ),
  col = anno_cols
)
```


Plot the plot

```{r}
min_mut_freq <- 0.05

# Get mutation frequencies
mut_freq <- (apply(comut_mat_final, MARGIN = 1, function(x) sum(x != "")) / ncol(comut_mat_final)) %>%
  sort(decreasing = T)

plot_genes <- names(which(mut_freq >= min_mut_freq))
```

Plot and save

```{r, fig.width=15, fig.height=12}
ht <- oncoPrint(comut_mat_final[plot_genes, ],
  right_annotation = rowAnnotation(
    row_barplot = anno_oncoprint_barplot(show_fraction = T, border = F)
  ),
  top_annotation = top_anno,
  column_split = metadata$time_point,
  # row_names_side = "left",
  column_title = NULL,
  alter_fun = alter_fun,
  col = mut_pal,
  show_column_names = TRUE,
  remove_empty_columns = FALSE,
  # pct_side = "right",
  column_title_rot = 0,
  border = TRUE
)

pdf(file = here("plots", "oncoprint.pdf"), width = 15, height = 12)
draw(ht)
dev.off()

suppressWarnings(ht)
```

# Summary statistics

```{r, fig.width = 11, fig.height = 3}
my_comparisons <- list(c("TN", "MRD"), c("TN", "PD"), c("MRD", "PD"))

mean_comp <- ggpubr::stat_compare_means(comparisons = my_comparisons, label = "p.signif", tip.length = 0, vjust = 0, size = 3)


p1 <- metadata %>%
  ggplot(aes(x = time_point, y = tmb)) +
  ggbeeswarm::geom_quasirandom(aes(color = time_point)) +
  geom_boxplot(fill = NA, outlier.shape = NA, aes(color = time_point)) +
  scale_y_log10(breaks = 10^(0:3)) +
  theme_classic() +
  mean_comp +
  # stat_comp +
  labs(x = "Timepoint", y = "TMB (mut/Mb)") +
  scale_color_manual(values = anno_cols$timepoint) +
  coord_cartesian(clip = "off", ylim = c(0.5, 100)) +
  theme(legend.position = "none", plot.margin = margin(t = 2, unit = "lines"))

p2 <- metadata %>%
  ggplot(aes(x = time_point, y = facets_fga)) +
  ggbeeswarm::geom_quasirandom(aes(color = time_point)) +
  geom_boxplot(fill = NA, outlier.shape = NA, aes(color = time_point)) +
  # scale_y_log10(breaks = 10^(0:3), limits = c(min(onco_meta$CVR_TMB_SCORE), 100)) +
  theme_classic() +
  mean_comp +
  labs(x = "Timepoint", y = "Fraction genome altered") +
  scale_color_manual(values = anno_cols$timepoint) +
  coord_cartesian(clip = "off", ylim = c(0, 1)) +
  theme(legend.position = "none")

p3 <- metadata %>%
  ggplot(aes(x = time_point, y = facets_ploidy)) +
  ggbeeswarm::geom_quasirandom(aes(color = time_point)) +
  geom_boxplot(fill = NA, outlier.shape = NA, aes(color = time_point)) +
  # scale_y_continuous(trans = "log2") +
  theme_classic() +
  mean_comp +
  labs(x = "Timepoint", y = "Ploidy") +
  scale_color_manual(values = anno_cols$timepoint) +
  coord_cartesian(clip = "off", ylim = c(1, 3.7)) +
  theme(legend.position = "none")

p4 <- metadata %>%
  ggplot(aes(x = time_point, y = facets_frac_loh)) +
  ggbeeswarm::geom_quasirandom(aes(color = time_point)) +
  geom_boxplot(fill = NA, outlier.shape = NA, aes(color = time_point)) +
  # scale_y_log10(breaks = 10^(0:3), limits = c(min(onco_meta$CVR_TMB_SCORE), 100)) +
  theme_classic() +
  mean_comp +
  labs(x = "Timepoint", y = "Fraction genome LOH") +
  coord_cartesian(clip = "off", ylim = c(0, 1)) +
  scale_color_manual(values = anno_cols$timepoint) +
  theme(legend.position = "none")


p5 <- metadata %>%
  dplyr::count(time_point, facets_wgd) %>%
  dplyr::filter(!is.na(facets_wgd)) %>%
  group_by(time_point) %>%
  add_tally(n) %>%
  mutate(wgd_frac = n / nn) %>%
  filter(facets_wgd == T) %>%
  ggplot(aes(x = time_point, y = wgd_frac)) +
  geom_col(aes(fill = time_point)) +
  labs(y = "Proportion of samples with WGD", fill = "Timepoint") +
  scale_fill_manual(values = anno_cols$timepoint) +
  theme_classic()

pcomb <- (p1 | p2 | p3 | p4 | p5) + plot_layout(guides = "collect") & guides(x = guide_axis(angle = 0)) & labs(x = NULL) &
  theme(plot.margin = margin(t = 1.5, 0.25, 0.25, 0.25, unit = "lines"))
ggsave(pcomb, filename = here("plots", "impact_wgd.pdf"), width = 11, height = 3)
pcomb
```


## Enrichment PD vs TN

```{r, fig.width=2.5, fig.height=1.75}
x <- (comut_mat_final != "") %>%
  as.data.frame() %>%
  rownames_to_column(var = "Gene") %>%
  pivot_longer(cols = !Gene, names_to = "sample_id") %>%
  left_join(metadata[, c("sample_id", "time_point")]) %>%
  group_by(Gene, time_point) %>%
  mutate(
    n_gene = sum(value),
    n_tp = n_distinct(sample_id)
  ) %>%
  distinct(Gene, time_point, n_gene, n_tp) %>%
  mutate(n_absent = n_tp - n_gene) %>%
  filter(time_point != "MRD") %>%
  pivot_wider(id_cols = "Gene", names_from = c(time_point), values_from = c("n_gene", "n_absent"))

enrich_res <- map(c("TP53", "RB1"), .f = function(gene) {
  vals <- x[x$Gene == gene, 2:5]

  mat <- matrix(c(vals[[2]], vals[[4]], vals[[1]], vals[[3]]),
    nrow = 2,
    dimnames = list(
      PD = c("Mut", "Wt"),
      Pre = c("Mut", "Wt")
    )
  )

  res <- stats::fisher.test(mat) %>%
    broom::tidy() %>%
    mutate(Gene = gene)
  return(res)
}) %>%
  list_rbind() %>%
  arrange(p.value) %>%
  rstatix::adjust_pvalue(method = "BH")


p <- enrich_res %>%
  ggplot(aes(x = estimate, y = Gene)) +
  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) +
  geom_text(aes(label = glue("{scales::label_pvalue(accuracy = 0.0001, add_p=T)(p.value)}")),
    nudge_y = 0.35, size = 3.5
  ) +
  theme_classic(base_size = 16) +
  scale_x_continuous(trans = "log2") +
  labs(x = "Odds Ratio", title = "Enrichment in PD") +
  geom_vline(xintercept = 1, linetype = "22") +
  theme(panel.border = element_rect(fill = NA), axis.line = element_blank()) +
  theme(plot.margin = margin(r = 1, 0.25, 0.25, 0.25, "lines"),
        plot.title = element_text(hjust = 0.5, size = 10))

ggsave(p, file = here("plots", "egfr_prog_enrich.pdf"), width = 2.5, height = 1.75)

p
```

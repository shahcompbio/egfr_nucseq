---
title: "LUAD/LUSC/SCLC CCLE signatures"
format: html
---

```{r setup}
library(tidyverse)
library(glue)
library(here)
library(patchwork)
library(ggh4x)
library(SummarizedExperiment)
library(dittoSeq)
library(Seurat)
library(bsub)
```


## Load data

### Metadata

```{r}
metadata <- read.csv(here("ccle_signatures", "metadata", "Model.csv"))
```

```{r, fig.width = 30, fig.height = 3}
ggplot(metadata, aes(x = fct_infreq(DepmapModelType))) +
  geom_bar() +
  guides(x = guide_axis(angle = 90))
```

```{r, fig.width = 20, fig.height=3}
ggplot(metadata, aes(x = fct_infreq(OncotreeCode))) +
  geom_bar() +
  guides(x = guide_axis(angle = 90))
```

#### Filter metadata

```{r}
meta_lung <- filter(metadata, DepmapModelType %in% c("LUAD", "SCLC", "LUSC"))

meta_lung %>%
  ggplot(aes(x = fct_infreq(OncotreeCode))) +
  geom_bar() +
  guides(x = guide_axis(angle = 90))
```


### Counts

```{r}
counts1p <- read.csv(file = here("ccle_signatures", "data", "OmicsExpressionProteinCodingGenesTPMLogp1.csv"), check.names = FALSE, row.names = 1)

meta_lung$counts_avail <- meta_lung$ModelID %in% rownames(counts1p)

with(meta_lung, table(OncotreeCode, counts_avail))
```


```{r}
# Load data into a summarized experiment
meta_lung <- filter(meta_lung, counts_avail)

counts_filt <- counts1p[meta_lung$ModelID, ] %>%
  as.matrix() %>%
  t()

rownames(counts_filt) <- genes <- str_split(string = colnames(counts1p), pattern = " ", simplify = TRUE)[, 1]

counts_raw_approx <- floor(expm1(counts_filt))

counts_norm_approx <- log1p(counts_raw_approx)

table((counts_norm_approx - counts_filt) < 0.00001)

# sce <- SingleCellExperiment(assays = list("logcounts" = counts_filt), colData = DataFrame(meta_lung))

srt <- CreateSeuratObject(counts = counts_raw_approx, meta.data = meta_lung)
#
# srt[["RNA"]]$data <- srt[["RNA"]]$counts_filt
```


```{r, fig.width = 3, fig.height=3}
meta_lung %>%
  ggplot(aes(x = fct_infreq(OncotreeCode))) +
  geom_bar() +
  guides(x = guide_axis(angle = 90)) +
  labs(x = "Cell Line Type", y = "Count")
```


## Using Seurat

```{r}
srt <- srt %>%
  NormalizeData() %>%
  ScaleData() %>%
  FindVariableFeatures() %>%
  RunPCA()


DimPlot(srt, reduction = "pca", group.by = "OncotreeCode", cols = dittoColors())
```

```{r}
srt <- JackStraw(srt, num.replicate = 100)
srt <- ScoreJackStraw(srt, dims = 1:20)
JackStrawPlot(srt, dims = 1:20)
```


```{r}
DimHeatmap(srt, dims = 1:3)
```


```{r, fig.width=5, fig.height=4}
srt <- RunUMAP(srt, dims = 1:10)
DimPlot(srt, reduction = "umap", group.by = "OncotreeCode", cols = dittoColors())
```

Find 

```{r}
Idents(srt) <- "OncotreeCode"
markers <- FindAllMarkers(srt, min.pct = 0.1, only.pos = TRUE)

# Save the full marker list
write.table(markers, file = "all_markers.txt", col.names = T, row.names = F, quote = F, sep = "\t")
```


Visualize top markers for each tumor type

```{r}
top_markers <- markers %>%
  group_by(cluster) %>%
  slice_head(n = 200)
```


```{r, fig.height=2, fig.width=7}
dittoHeatmap(srt, genes = top_markers$gene, annot.by = "OncotreeCode", complex = T, heatmap.colors = scatools::logr_col_fun(), show_rownames = F, name = "Scaled Expression")
```


Export the SCLC Signature genes

```{r}
sclc_markers <- markers %>%
  filter(cluster == "SCLC") %>%
  mutate(pct_diff = pct.1 - pct.2) %>%
  filter(p_val_adj < 0.05) %>%
  filter(
    pct_diff >= 0.1,
    pct.1 >= 0.50,
    pct.2 <= 0.50
  )

write.table(sclc_markers, file = "sclc_markers.txt", col.names = T, row.names = F, quote = F, sep = "\t")
```

